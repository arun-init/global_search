# Generated by Django 4.0 on 2023-07-01 10:41

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("global_search", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="City",
            fields=[
                (
                    "ID",
                    models.AutoField(primary_key=True, serialize=False, verbose_name="id"),
                ),
                (
                    "Name",
                    models.CharField(default="", max_length=35, verbose_name="name"),
                ),
                (
                    "CountryCode",
                    models.CharField(default="", max_length=3, verbose_name="country code"),
                ),
                (
                    "District",
                    models.CharField(default="", max_length=20, verbose_name="district"),
                ),
                (
                    "Population",
                    models.IntegerField(default=0, verbose_name="population"),
                ),
            ],
            options={
                "verbose_name": "city",
                "verbose_name_plural": "city",
                "db_table": "city",
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                (
                    "Code",
                    models.CharField(
                        max_length=3,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Country Code",
                    ),
                ),
                (
                    "Name",
                    models.CharField(default="", max_length=52, verbose_name="Country Name"),
                ),
                (
                    "Continent",
                    models.CharField(
                        choices=[
                            ("Asia", "Asia"),
                            ("Europe", "Europe"),
                            ("North America", "North America"),
                            ("Africa", "Africa"),
                            ("Oceania", "Oceania"),
                            ("Antarctica", "Antarctica"),
                            ("South America", "South America"),
                        ],
                        default="Asia",
                        max_length=15,
                        verbose_name="Continent",
                    ),
                ),
                (
                    "Region",
                    models.CharField(default="", max_length=26, verbose_name="Region"),
                ),
                (
                    "SurfaceArea",
                    models.FloatField(default=0.0, verbose_name="Surface Area"),
                ),
                (
                    "IndepYear",
                    models.SmallIntegerField(
                        blank=True, null=True, verbose_name="Year of Independence"
                    ),
                ),
                (
                    "Population",
                    models.IntegerField(default=0, verbose_name="Population"),
                ),
                (
                    "LifeExpectancy",
                    models.FloatField(blank=True, null=True, verbose_name="Life Expectancy"),
                ),
                ("GNP", models.FloatField(blank=True, null=True, verbose_name="GNP")),
                (
                    "GNPOld",
                    models.FloatField(blank=True, null=True, verbose_name="GNP Old"),
                ),
                (
                    "LocalName",
                    models.CharField(default="", max_length=45, verbose_name="Local Name"),
                ),
                (
                    "GovernmentForm",
                    models.CharField(default="", max_length=45, verbose_name="Government Form"),
                ),
                (
                    "HeadOfState",
                    models.CharField(
                        blank=True,
                        max_length=60,
                        null=True,
                        verbose_name="Head of State",
                    ),
                ),
                (
                    "Capital",
                    models.IntegerField(blank=True, null=True, verbose_name="Capital"),
                ),
                (
                    "Code2",
                    models.CharField(default="", max_length=2, verbose_name="Country Code 2"),
                ),
            ],
            options={
                "verbose_name": "country",
                "verbose_name_plural": "country",
                "db_table": "country",
            },
        ),
        migrations.CreateModel(
            name="CountryLanguage",
            fields=[
                (
                    "CountryCode",
                    models.CharField(
                        max_length=3,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Country Code",
                    ),
                ),
                ("Language", models.CharField(max_length=30, verbose_name="Language")),
                (
                    "IsOfficial",
                    models.CharField(
                        choices=[("T", "T"), ("F", "F")],
                        default="F",
                        max_length=1,
                        verbose_name="Is Official",
                    ),
                ),
                (
                    "Percentage",
                    models.FloatField(
                        default=0.0,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(100.0),
                        ],
                        verbose_name="Percentage",
                    ),
                ),
            ],
            options={
                "verbose_name": "country language",
                "verbose_name_plural": "country languages",
                "db_table": "countrylanguage",
            },
        ),
        migrations.AddConstraint(
            model_name="countrylanguage",
            constraint=models.UniqueConstraint(
                fields=("CountryCode", "Language"), name="country_language_unique"
            ),
        ),
        migrations.AddConstraint(
            model_name="countrylanguage",
            constraint=models.UniqueConstraint(
                fields=("CountryCode",), name="countryLanguage_ibfk_1"
            ),
        ),
    ]
